import { Component, signal, WritableSignal } from '@angular/core';
import { CodeHighLightComponent } from '../../shared/components/code-highlight/code-highlight.component';

@Component({
  selector: 'app-directory-layout',
  imports: [CodeHighLightComponent],
  templateUrl: './directory-layout.component.html',
  styleUrl: './directory-layout.component.scss',
})
export default class DirectoryLayoutComponent {
  public suggestedDirectoryStructure: WritableSignal<string> =
    signal(`/angular-standalone-app
â”‚â”€â”€ src/
â”‚   â”œâ”€â”€ app/
â”‚   â”‚   â”œâ”€â”€ core/                # Core services, interceptors, auth, and singleton services
â”‚   â”‚   â”‚   â”œâ”€â”€ auth/            # Authentication-related services (e.g., AuthService)
â”‚   â”‚   â”‚   â”œâ”€â”€ services/        # Singleton services used across the app
â”‚   â”‚   â”‚   â”œâ”€â”€ interceptors/    # HTTP interceptors
â”‚   â”‚   â”‚   â”œâ”€â”€ guards/          # Route guards
â”‚   â”‚   â”‚   â”œâ”€â”€ models/          # Interfaces & models
â”‚   â”‚   â”‚   â”œâ”€â”€ config/          # Configuration files (e.g., environment settings)
â”‚   â”‚   â”‚   â”œâ”€â”€ core.config.ts   # Central configuration
â”‚   â”‚   â”œâ”€â”€ features/            # Feature-based components
â”‚   â”‚   â”‚   â”œâ”€â”€ home/            # Home page feature
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ components/  # UI Components specific to this feature
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ views/       # Views/pages
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ home.component.ts
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ home.component.html
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ home.component.scss
â”‚   â”‚   â”‚   â”œâ”€â”€ about/           # Another feature (e.g., About page)
â”‚   â”‚   â”œâ”€â”€ shared/              # Reusable components, directives, pipes
â”‚   â”‚   â”‚   â”œâ”€â”€ components/      # Shared UI components (e.g., buttons, modals)
â”‚   â”‚   â”‚   â”œâ”€â”€ directives/      # Reusable directives
â”‚   â”‚   â”‚   â”œâ”€â”€ pipes/           # Reusable pipes
â”‚   â”‚   â”‚   â”œâ”€â”€ shared.module.ts # (optional, if using a shared module)
â”‚   â”‚   â”œâ”€â”€ layout/              # Global layout components
â”‚   â”‚   â”‚   â”œâ”€â”€ header/          # Header (mat-toolbar, navigation)
â”‚   â”‚   â”‚   â”œâ”€â”€ footer/          # Footer
â”‚   â”‚   â”‚   â”œâ”€â”€ sidebar/         # Sidebar (if any)
â”‚   â”‚   â”‚   â”œâ”€â”€ layout.component.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ layout.component.html
â”‚   â”‚   â”‚   â”œâ”€â”€ layout.component.scss
â”‚   â”‚   â”œâ”€â”€ app.component.ts     # Root component
â”‚   â”‚   â”œâ”€â”€ app.component.html
â”‚   â”‚   â”œâ”€â”€ app.component.scss
â”‚   â”‚   â”œâ”€â”€ app.config.ts        # Application configuration (bootstrap standalone)
â”‚   â”‚   â”œâ”€â”€ app.routes.ts        # Routing configuration
â”‚   â”œâ”€â”€ assets/                  # Static assets (images, icons, etc.)
â”‚   â”œâ”€â”€ environments/            # Environment-specific configurations
â”‚   â”œâ”€â”€ main.ts                  # Main entry point
â”‚   â”œâ”€â”€ index.html               # Root HTML file
â”‚   â”œâ”€â”€ styles.scss              # Global styles
â”‚   â”œâ”€â”€ angular.json             # Angular configuration
â”‚   â”œâ”€â”€ package.json             # Dependencies
â”‚   â”œâ”€â”€ tsconfig.json            # TypeScript configuration
`);

  public directoryStructureDiagram: WritableSignal<string> =
    signal(`ðŸ“‚ angular-standalone-app
â”‚â”€â”€ ðŸ“‚ src
â”‚   â”‚â”€â”€ ðŸ“‚ app
â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ core
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ auth
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ services
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ interceptors
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ guards
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ models
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ config
â”‚   â”‚   â”‚   â”‚â”€â”€ core.config.ts
â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ features
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ home
â”‚   â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ components
â”‚   â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ views
â”‚   â”‚   â”‚   â”‚   â”‚â”€â”€ home.component.ts
â”‚   â”‚   â”‚   â”‚   â”‚â”€â”€ home.component.html
â”‚   â”‚   â”‚   â”‚   â”‚â”€â”€ home.component.scss
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ about
â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ shared
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ components
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ directives
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ pipes
â”‚   â”‚   â”‚   â”‚â”€â”€ shared.module.ts (optional)
â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ layout
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ header
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ footer
â”‚   â”‚   â”‚   â”‚â”€â”€ ðŸ“‚ sidebar
â”‚   â”‚   â”‚   â”‚â”€â”€ layout.component.ts
â”‚   â”‚   â”‚   â”‚â”€â”€ layout.component.html
â”‚   â”‚   â”‚   â”‚â”€â”€ layout.component.scss
â”‚   â”‚   â”‚â”€â”€ app.component.ts
â”‚   â”‚   â”‚â”€â”€ app.component.html
â”‚   â”‚   â”‚â”€â”€ app.component.scss
â”‚   â”‚   â”‚â”€â”€ app.config.ts
â”‚   â”‚   â”‚â”€â”€ app.routes.ts
â”‚   â”‚â”€â”€ ðŸ“‚ assets
â”‚   â”‚â”€â”€ ðŸ“‚ environments
â”‚   â”‚â”€â”€ main.ts
â”‚   â”‚â”€â”€ index.html
â”‚   â”‚â”€â”€ styles.scss
â”‚â”€â”€ angular.json
â”‚â”€â”€ package.json
â”‚â”€â”€ tsconfig.json
`);
}
